// Copyright 2016-2017 Hippo B.V. (http://www.onehippo.com)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

@import 'variables';

@mixin overlay-border-component($suffix: '') {
  border: 1px solid $blue-500 unquote($suffix);
  box-shadow: inset 0 0 0 1px $half-white unquote($suffix);
}

.channel-dragula-mirror {
  bottom: 0;
  left: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 0;

  > .gu-mirror {
    @include overlay-border-component('!important');

    overflow: hidden !important;
    pointer-events: none !important;
    position: absolute !important;
    transform-origin: top left;
  }
}

//TODO: remove all this once all overlay styling moved to hippo-iframe.css
//
//@mixin overlay-position() {
//  bottom: 0;
//  left: 0;
//  pointer-events: none;
//  position: absolute;
//  right: 0;
//  top: 0;
//}
//
//@mixin overlay-border-container() {
//  border: 1px solid $black;
//  box-shadow: inset 0 0 0 1px $half-white;
//}
//
//.overlay {
//  @include overlay-position;
//}
//
//overlay-element {
//  box-sizing: border-box;
//  pointer-events: auto;
//  position: absolute;
//
//  &.overlay-permeable {
//    pointer-events: none;
//  }
//}
//
//.overlay-label {
//  border: 1px solid $half-white;
//  color: $white;
//  display: none;
//  font-size: 12px;
//  height: 26px;
//  left: 0;
//  position: absolute;
//  top: 0;
//
//  .overlay-label-text {
//    display: none;
//    padding: 0 6px;
//  }
//
//  &.overlay-label-with-icon .overlay-label-text {
//    padding-left: 0;
//  }
//
//  .overlay-label-icon {
//    color: $white;
//    display: none;
//    margin: -2px 2px 0;
//  }
//}
//
//.overlay-element-container {
//  @include overlay-border-container;
//
//  display: none;
//  z-index: 10;
//
//  > .overlay-label {
//    background: $black;
//    display: none;
//  }
//
//  &-visible {
//    display: block;
//  }
//
//  &.overlay-label-visible {
//    > .overlay-label {
//      display: flex;
//
//      .overlay-label-text {
//        display: inline;
//      }
//    }
//  }
//}
//
//.overlay-element-component {
//  @include overlay-border-component;
//
//  cursor: pointer;
//  display: none;
//
//  > .overlay-label {
//    background: $blue-500;
//  }
//
//  &:hover {
//    box-shadow: inset 0 0 0 1px $half-white, inset 0 0 160px 1px $blue-shadow;
//
//    > .overlay-label {
//      display: flex; // show label unconditionally...
//
//      .overlay-label-text {
//        display: inline; // ...including text.
//      }
//    }
//  }
//
//  &-visible {
//    display: block;
//
//    > .overlay-label.overlay-label-with-icon {
//      display: flex; // if the label has an icon, it should always be shown.
//
//      .overlay-label-icon {
//        display: inline;
//      }
//    }
//  }
//}
//
//.overlay-element-fab {
//  margin: 0;
//  > md-icon {
//    // visually move the edit-menu and open-content icons to the middle of the FAB button
//    margin-top: 1px;
//  }
//}
//
//.overlay-element-fab-content-link > md-icon {
//  // visually move the open-content icon to the middle of the FAB button
//  margin-left: 5px;
//}
//
//.overlay-lock-icon {
//  background: $black;
//  color: $grey-50;
//  cursor: default;
//  float: right;
//  margin-right: -1px;
//  // prevent the on-hover effect of a component against a container's edge by shifting the lock icon 1px up and right
//  margin-top: -1px;
//  pointer-events: all;
//}
//
//.overlay-lock-tooltip ._md-content {
//  // make 'lock' tooltips black without transparency so the channel does not shine through
//  background-color: $grey-900 !important;
//}

//.add-mode {
//  // make dragging go smooth by capturing mouse-move events in the entire overlay
//  &.overlay {
//    pointer-events: auto;
//  }
//
//  // in add mode, hide all component overlays...
//  .overlay-element-component {
//    display: none;
//  }
//
//  // ...and show all container overlays
//  .overlay-element-container {
//    display: block;
//
//    & .overlay-label {
//      display: flex;
//
//      .overlay-label-text {
//        display: inline;
//      }
//    }
//
//    // highlight the container when dragging the component over it
//    &.has-shadow {
//      box-shadow: inset 0 0 0 1px $half-white, inset 0 0 160px 1px $black-shadow;
//    }
//  }
//}
